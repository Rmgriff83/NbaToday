{"version":3,"sources":["Img.js","getDate.js","App.js","reportWebVitals.js","index.js"],"names":["React","Component","getDate","Date","toLocaleDateString","App","useState","items","setItems","gameStats","setGameStats","isLoaded","setIsLoaded","error","setError","selectedGame","setSelectedGame","startDate","parseDate","date","toString","substr","console","log","gameInfo","status","homeTeam","homeTeamScore","visitorTeam","visitorTeamScore","time","id","className","Button","variant","onClick","gameId","gameStatus","fetch","then","res","json","result","data","setInterval","whichTeam","teamId","team","whichLogo","teamLogo","src","alt","playerStatsList","fName","lName","pts","ast","reb","stl","blk","fg_pct","min","useEffect","message","length","gameObject","playersHome","filter","e","game","home_team_id","playersAway","visitor_team_id","home_team_score","visitor_team_score","map","item","player","first_name","last_name","showStats","home_team","abbreviation","visitor_team","LinearProgress","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OAGyBA,IAAMC,UCHxB,SAASC,IAUd,OATQ,IAAIC,MASHC,qB,0BC0kBIC,MA5kBf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNC,EADM,KACCC,EADD,OAEqBF,mBAAS,IAF9B,mBAENG,EAFM,KAEKC,EAFL,OAGmBJ,oBAAS,GAH5B,mBAGNK,EAHM,KAGIC,EAHJ,OAIaN,mBAAS,MAJtB,mBAINO,EAJM,KAICC,EAJD,OAK2BR,mBAAS,MALpC,mBAKNS,EALM,KAKQC,EALR,OAMqBV,mBAAS,IAAIH,MANlC,mBAMNc,EANM,aAOuBX,oBAAS,IAPhC,mBASb,SAASY,EAAUC,GAIjB,OAHAA,EAAOF,EAAUG,WAAWC,OAAO,EAAG,IAEtCC,QAAQC,IAAIJ,GACLA,EA0DT,SAASK,EACPC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEA,OACE,sBAAcC,UAAU,OAAxB,UACE,oBAAGA,UAAoB,KAATF,EAAc,qBAAuB,SAAnD,UACGJ,EADH,IACcC,EADd,IAC8BC,EAD9B,IAC4CC,KAE5C,8BACE,+BACc,YAAXJ,GACU,YAAXA,GACW,YAAXA,GACW,YAAXA,GACW,aAAXA,GACW,UAAXA,EAxBD,gDA0BK,OACE,IACR,sBACEO,UACa,YAAXP,GACW,YAAXA,GACW,YAAXA,GACW,YAAXA,GACW,aAAXA,EACI,gBACA,KARR,SAWGA,IAEFK,KAEH,cAACG,EAAA,EAAD,CACED,UAAU,gBACVE,QAAQ,YACRC,QAAS,WAmCjB,IAAkBC,EAAQC,EAARD,EAlCCL,EAkCOM,EAlCHZ,EAmCrBb,GAAY,GAEZ0B,MAAM,sDAAD,OAAuDF,IACzDG,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MACC,SAACG,GAEC1B,EAAgB0B,EAAOC,MACvB/B,GAAY,GACZF,EAAagC,EAAOC,MACpBrB,QAAQC,IAAId,MAEd,SAACI,GACCS,QAAQC,IAAIV,MAKdwB,GAActB,GAChB6B,aAAY,WACVN,MAAM,mEAAD,OACgEF,IAElEG,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MACC,SAACG,GAGC1B,EAAgB0B,EAAOC,MACvBjC,EAAagC,EAAOC,MACpBrB,QAAQC,IAAId,MAEd,SAACI,GACCS,QAAQC,IAAIV,QAGjB,MA3ED,kBASA,yBAvCQkB,GA8Gd,SAASc,EAAUC,GACjB,IAAIC,EAEJ,OAAQD,GACN,KAAK,EACHC,EAAO,MACP,MACF,KAAK,EACHA,EAAO,MACP,MACF,KAAK,EACHA,EAAO,MACP,MACF,KAAK,EACHA,EAAO,MACP,MACF,KAAK,EACHA,EAAO,MACP,MACF,KAAK,EACHA,EAAO,MACP,MACF,KAAK,EACHA,EAAO,MACP,MACF,KAAK,EACHA,EAAO,MACP,MACF,KAAK,EACHA,EAAO,MACP,MACF,KAAK,GACHA,EAAO,MACP,MACF,KAAK,GACHA,EAAO,MACP,MACF,KAAK,GACHA,EAAO,MACP,MACF,KAAK,GACHA,EAAO,MACP,MACF,KAAK,GACHA,EAAO,MACP,MACF,KAAK,GACHA,EAAO,MACP,MACF,KAAK,GACHA,EAAO,MACP,MACF,KAAK,GACHA,EAAO,MACP,MACF,KAAK,GACHA,EAAO,MACP,MACF,KAAK,GACHA,EAAO,MACP,MACF,KAAK,GACHA,EAAO,MACP,MACF,KAAK,GACHA,EAAO,MACP,MACF,KAAK,GACHA,EAAO,MACP,MACF,KAAK,GACHA,EAAO,MACP,MACF,KAAK,GACHA,EAAO,MACP,MACF,KAAK,GACHA,EAAO,MACP,MACF,KAAK,GACHA,EAAO,MACP,MACF,KAAK,GACHA,EAAO,MACP,MACF,KAAK,GACHA,EAAO,MACP,MACF,KAAK,GACHA,EAAO,MACP,MACF,KAAK,GACHA,EAAO,MACP,MACF,QACEA,EAAO,MAGX,OAAO,qBAAKf,UAAU,mBAAf,SAAmCe,IAG5C,SAASC,EAAUF,GAEjB,IAAIG,EAEJ,OAAQH,GACN,KAAK,EACHG,EAAW,wBACX,MACF,KAAK,EACHA,EAAW,0BACX,MACF,KAAK,EACHA,EAAW,uBACX,MACF,KAAK,EACHA,EAAW,0BACX,MACF,KAAK,EACHA,EAAW,wBACX,MACF,KAAK,EACHA,EAAW,uBACX,MACF,KAAK,EACHA,EAAW,uBAC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","file":"static/js/main.b995c40b.chunk.js","sourcesContent":["import React from \"react\";\n// import {Button} from './Button';\n\nexport class Img extends React.Component {\n  // handleClick(){\n  //     console.log('btn clicked');\n  // }\n  handleSrc() {\n    switch (this.props.team) {\n    }\n  }\n\n  render() {\n    return (\n      <p>\n        Hi World\n        <br />\n        {this.props.text}\n        <br />\n        {/* <Button onClick={this.handleClick} /> */}\n      </p>\n    );\n  }\n}\n","export function getDate() {\n  let d = new Date();\n  // let year = d.getFullYear();\n  // let month = d.getMonth() + 1;\n  // let day = d.getDay() + 27;\n  // console.log(d.toLocaleDateString());\n\n  //this takes off the extra characters of the ISO date so I can pass\n  //it into my url as a parameter\n\n  return d.toLocaleDateString();\n  // return \"Jan 02 2021\";\n}\n","import \"./App.css\";\nimport { Img } from \"./Img\";\nimport { getDate } from \"./getDate\";\nimport { useEffect, useState } from \"react\";\nimport { LinearProgress, Button } from \"@material-ui/core\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nfunction App() {\n  const [items, setItems] = useState([]);\n  const [gameStats, setGameStats] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [error, setError] = useState(null);\n  const [selectedGame, setSelectedGame] = useState(null);\n  const [startDate, setStartDate] = useState(new Date());\n  const [dateChange, setDateChange] = useState(false);\n\n  function parseDate(date) {\n    date = startDate.toString().substr(4, 11);\n\n    console.log(date);\n    return date;\n    // let parsedDate = date.substr(4, 14);\n    // return parsedDate;\n  }\n\n  function call() {\n    setInterval(function () {\n      fetch(\n        `https://www.balldontlie.io/api/v1/games?per_page=100&dates[]=${parseDate(\n          startDate\n        )}`\n      )\n        .then((res) => res.json())\n        .then(\n          (result) => {\n            setIsLoaded(true);\n            setItems(result.data);\n            // console.log(items);\n          },\n          // Note: it's important to handle errors here\n          // instead of a catch() block so that we don't swallow\n          // exceptions from actual bugs in components.\n          (error) => {\n            setIsLoaded(true);\n            setError(error);\n          }\n        );\n    }, 45000);\n  }\n\n  useEffect(() => {\n    fetch(\n      `https://www.balldontlie.io/api/v1/games?per_page=100&dates[]=${parseDate(\n        startDate\n      )}`\n    )\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          setIsLoaded(true);\n          setItems(result.data);\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          setIsLoaded(true);\n          setError(error);\n        }\n      );\n    call();\n    console.log(getDate());\n  }, []);\n\n  function timeIcon() {\n    return <span>&#128337;</span>;\n  }\n\n  function gameInfo(\n    status,\n    homeTeam,\n    homeTeamScore,\n    visitorTeam,\n    visitorTeamScore,\n    time,\n    id\n  ) {\n    return (\n      <div key={id} className=\"game\">\n        <p className={time !== \"\" ? \"scores active-game\" : \"scores\"}>\n          {homeTeam}:{homeTeamScore} {visitorTeam}:{visitorTeamScore}\n        </p>\n        <p>\n          <span>\n            {status !== \"1st Qtr\" &&\n            status !== \"2nd Qtr\" &&\n            status !== \"3rd Qtr\" &&\n            status !== \"4th Qtr\" &&\n            status !== \"Halftime\" &&\n            status !== \"Final\"\n              ? timeIcon()\n              : null}\n          </span>{\" \"}\n          <span\n            className={\n              status !== \"1st Qtr\" &&\n              status !== \"2nd Qtr\" &&\n              status !== \"3rd Qtr\" &&\n              status !== \"4th Qtr\" &&\n              status !== \"Halftime\"\n                ? \"upcoming-game\"\n                : null\n            }\n          >\n            {status}\n          </span>\n          {time}\n        </p>\n        <Button\n          className=\"view-game-btn\"\n          variant=\"contained\"\n          onClick={() => {\n            viewGame(id, status);\n          }}\n        >\n          View\n        </Button>\n        <br />\n      </div>\n    );\n  }\n\n  //\n  // front page games area\n  function listArea() {\n    // console.log(items);\n    return (\n      <div id=\"list-cont\">\n        {items.map((item) =>\n          gameInfo(\n            item.status,\n            item.home_team.abbreviation,\n            item.home_team_score,\n            item.visitor_team.abbreviation,\n            item.visitor_team_score,\n            item.time,\n            item.id\n          )\n        )}\n      </div>\n    );\n  }\n\n  //\n  // view game function area\n\n  function viewGame(gameId, gameStatus) {\n    setIsLoaded(false);\n    //   initial call\n    fetch(`https://www.balldontlie.io/api/v1/stats?game_ids[]=${gameId}`)\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          // console.log(result);\n          setSelectedGame(result.data);\n          setIsLoaded(true);\n          setGameStats(result.data);\n          console.log(gameStats);\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n\n    //   update every 50sec\n    if (gameStatus && selectedGame) {\n      setInterval(function () {\n        fetch(\n          `https://www.balldontlie.io/api/v1/stats?per_page=100&game_ids[]=${gameId}`\n        )\n          .then((res) => res.json())\n          .then(\n            (result) => {\n              // console.log(result);\n              // console.log(selectedGame);\n              setSelectedGame(result.data);\n              setGameStats(result.data);\n              console.log(gameStats);\n            },\n            (error) => {\n              console.log(error);\n            }\n          );\n      }, 50000);\n      // console.log(selectedGame);\n    }\n  }\n  //chooses team abbreviation\n  function whichTeam(teamId) {\n    let team;\n\n    switch (teamId) {\n      case 1:\n        team = \"ATL\";\n        break;\n      case 2:\n        team = \"BOS\";\n        break;\n      case 3:\n        team = \"BKN\";\n        break;\n      case 4:\n        team = \"CHA\";\n        break;\n      case 5:\n        team = \"CHI\";\n        break;\n      case 6:\n        team = \"CLE\";\n        break;\n      case 7:\n        team = \"DAL\";\n        break;\n      case 8:\n        team = \"DEN\";\n        break;\n      case 9:\n        team = \"DET\";\n        break;\n      case 10:\n        team = \"GSW\";\n        break;\n      case 11:\n        team = \"HOU\";\n        break;\n      case 12:\n        team = \"IND\";\n        break;\n      case 13:\n        team = \"LAC\";\n        break;\n      case 14:\n        team = \"LAL\";\n        break;\n      case 15:\n        team = \"MEM\";\n        break;\n      case 16:\n        team = \"MIA\";\n        break;\n      case 17:\n        team = \"MIL\";\n        break;\n      case 18:\n        team = \"MIN\";\n        break;\n      case 19:\n        team = \"NOP\";\n        break;\n      case 20:\n        team = \"NYK\";\n        break;\n      case 21:\n        team = \"OKC\";\n        break;\n      case 22:\n        team = \"ORL\";\n        break;\n      case 23:\n        team = \"PHI\";\n        break;\n      case 24:\n        team = \"PHX\";\n        break;\n      case 25:\n        team = \"POR\";\n        break;\n      case 26:\n        team = \"SAC\";\n        break;\n      case 27:\n        team = \"SAS\";\n        break;\n      case 28:\n        team = \"TOR\";\n        break;\n      case 29:\n        team = \"UTA\";\n        break;\n      case 30:\n        team = \"WAS\";\n        break;\n      default:\n        team = \"WTF\";\n    }\n\n    return <div className=\"teamAbbreviation\">{team}</div>;\n  }\n  //chooses team logo\n  function whichLogo(teamId) {\n    //another switch which picks the logo image\n    let teamLogo;\n\n    switch (teamId) {\n      case 1:\n        teamLogo = \"/pics/logos/hawks.jpg\";\n        break;\n      case 2:\n        teamLogo = \"/pics/logos/celtics.jpg\";\n        break;\n      case 3:\n        teamLogo = \"/pics/logos/nets.jpg\";\n        break;\n      case 4:\n        teamLogo = \"/pics/logos/hornets.jpg\";\n        break;\n      case 5:\n        teamLogo = \"/pics/logos/bulls.jpg\";\n        break;\n      case 6:\n        teamLogo = \"/pics/logos/cavs.jpg\";\n        break;\n      case 7:\n        teamLogo = \"/pics/logos/mavs.jpg\";\n        break;\n      case 8:\n        teamLogo = \"/pics/logos/nuggets.jpg\";\n        break;\n      case 9:\n        teamLogo = \"/pics/logos/pistons.jpg\";\n        break;\n      case 10:\n        teamLogo = \"/pics/logos/warriors.jpg\";\n        break;\n      case 11:\n        teamLogo = \"/pics/logos/rockets.jpg\";\n        break;\n      case 12:\n        teamLogo = \"/pics/logos/pacers.jpg\";\n        break;\n      case 13:\n        teamLogo = \"/pics/logos/clippers.jpg\";\n        break;\n      case 14:\n        teamLogo = \"/pics/logos/lakers.jpg\";\n        break;\n      case 15:\n        teamLogo = \"/pics/logos/grizzlies.jpg\";\n        break;\n      case 16:\n        teamLogo = \"/pics/logos/heat.jpg\";\n        break;\n      case 17:\n        teamLogo = \"/pics/logos/bucks.jpg\";\n        break;\n      case 18:\n        teamLogo = \"/pics/logos/timberwolves.jpg\";\n        break;\n      case 19:\n        teamLogo = \"/pics/logos/pelicans.jpg\";\n        break;\n      case 20:\n        teamLogo = \"/pics/logos/knicks.jpg\";\n        break;\n      case 21:\n        teamLogo = \"/pics/logos/thunder.jpg\";\n        break;\n      case 22:\n        teamLogo = \"/pics/logos/magic.jpg\";\n        break;\n      case 23:\n        teamLogo = \"/pics/logos/76ers.jpg\";\n        break;\n      case 24:\n        teamLogo = \"/pics/logos/suns.jpg\";\n        break;\n      case 25:\n        teamLogo = \"/pics/logos/blazers.jpg\";\n        break;\n      case 26:\n        teamLogo = \"/pics/logos/kings.jpg\";\n        break;\n      case 27:\n        teamLogo = \"/pics/logos/spurs.jpg\";\n        break;\n      case 28:\n        teamLogo = \"/pics/logos/raptors.jpg\";\n        break;\n      case 29:\n        teamLogo = \"/pics/logos/jazz.jpg\";\n        break;\n      case 30:\n        teamLogo = \"/pics/logos/wizards.jpg\";\n        break;\n      default:\n        teamLogo = \"WTF\";\n    }\n\n    return <img src={teamLogo} alt=\"team logo\" className=\"logo\" />;\n  }\n  //lists player's stats\n  function playerStatsList(\n    id,\n    fName,\n    lName,\n    pts,\n    ast,\n    reb,\n    stl,\n    blk,\n    fg_pct,\n    min\n  ) {\n    return (\n      <div id=\"player-tab\">\n        <div className=\"stats-player-box\">\n          <td>{fName}</td>\n          <td>\n            {lName} <span className=\"stat\">{min}</span>\n          </td>\n          <td></td>\n        </div>\n\n        <td>\n          <span className=\"stat\">Pts:{pts}</span>{\" \"}\n          <span className=\"stat\">Reb:{reb}</span>\n          <span className=\"stat\">Ast:{ast}</span>\n          <span className=\"stat\">Stl:{stl}</span>\n          <span className=\"stat\">Blk:{blk}</span>\n          <span className=\"stat\">FG%:{fg_pct}</span>\n        </td>\n        <br />\n      </div>\n    );\n  }\n\n  // beginning of show individual game stats function\n  function showStats(gameObject) {\n    console.log(gameObject);\n    //filters object into players for home team\n    let playersHome = gameObject.filter(function (e) {\n      return e.game.home_team_id === e.team.id;\n    });\n\n    //filters object into players for visiting team\n    let playersAway = gameObject.filter(function (e) {\n      return e.game.visitor_team_id === e.team.id;\n    });\n    return (\n      <div id=\"wrapper\">\n        <div>\n          <div id=\"selected-score-box\">\n            <h1>\n              {whichLogo(gameObject[0].game.home_team_id)}\n              <span>\n                {whichTeam(gameObject[0].game.home_team_id)}{\" \"}\n                {gameObject[0].game.home_team_score}\n              </span>\n            </h1>\n            <h1 className=\"inline\">\n              {whichLogo(gameObject[0].game.visitor_team_id)}\n              {whichTeam(gameObject[0].game.visitor_team_id)}{\" \"}\n              {gameObject[0].game.visitor_team_score}\n            </h1>\n          </div>\n          <div id=\"team-stats-box\">\n            <table>\n              <p className=\"team-header-stats\">\n                {whichTeam(gameObject[0].game.home_team_id)}\n              </p>\n              {playersHome.map((item) => (\n                <tr key={item.player.id}>\n                  {playerStatsList(\n                    item.team.id,\n                    item.player.first_name,\n                    item.player.last_name,\n                    item.pts,\n                    item.ast,\n                    item.reb,\n                    item.stl,\n                    item.blk,\n                    item.fg_pct,\n                    item.min\n                  )}\n                </tr>\n              ))}\n            </table>\n\n            <table>\n              <p className=\"team-header-stats\">\n                {whichTeam(gameObject[0].game.visitor_team_id)}\n              </p>\n              {playersAway.map((item) => (\n                <tr key={item.player.id}>\n                  {playerStatsList(\n                    item.team.id,\n                    item.player.first_name,\n                    item.player.last_name,\n                    item.pts,\n                    item.ast,\n                    item.reb,\n                    item.stl,\n                    item.blk,\n                    item.fg_pct,\n                    item.min\n                  )}\n                </tr>\n              ))}\n            </table>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  //end of show individual game stats function\n\n  //\n  // start of app return statement\n  if (error) {\n    {\n      console.log(error);\n\n      return <div>Error: {error.message}</div>;\n    }\n  } else if (!isLoaded) {\n    return <LinearProgress id=\"progressBar\" />;\n  } else if (selectedGame && selectedGame.length != 0) {\n    //shows individual game\n    return (\n      <div>\n        <Button\n          variant=\"outlined\"\n          onClick={() => {\n            setSelectedGame(null);\n          }}\n        >\n          Return\n        </Button>\n        {showStats(selectedGame)}\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        {/* <P text=\"hi\" /> */}\n        <div id=\"title-box-area\">\n          <span>\n            <img\n              id=\"bball\"\n              src=\"pics/basketball.gif\"\n              alt=\"basketball spinning\"\n            />\n          </span>\n          <h1 id=\"title\">\n            NBA Today\n            <br />\n            <span id=\"title-date\">{getDate()}</span>\n          </h1>\n          {/* <DatePicker\n            selected={startDate}\n            onChange={(date) => {\n              setStartDate(date);\n              setDateChange(true);\n\n              fetch(\n                `https://www.balldontlie.io/api/v1/games?per_page=100&dates[]=${parseDate(\n                  date\n                )}`\n              )\n                .then((res) => res.json())\n                .then(\n                  (result) => {\n                    setIsLoaded(true);\n                    setItems(result.data);\n                    // console.log(\"ran\");\n                  },\n                  // Note: it's important to handle errors here\n                  // instead of a catch() block so that we don't swallow\n                  // exceptions from actual bugs in components.\n                  (error) => {\n                    setIsLoaded(true);\n                    setError(error);\n                  }\n                );\n              listArea();\n            }}\n          />\n          {console.log(startDate)} */}\n        </div>\n        {listArea()}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}