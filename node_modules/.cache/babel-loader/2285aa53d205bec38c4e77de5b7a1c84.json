{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/rossgriffus/Documents/React-Practice/test12-26/12-26/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { P } from \"./P\";\nimport { useEffect, useState } from \"react\";\n\nfunction App() {\n  _s();\n\n  const [items, setItems] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetch(\"https://www.balldontlie.io/api/v1/games&per_page=100\").then(res => res.json()).then(result => {\n      // setIsLoaded(true);\n      setItems(result.data);\n      setIsLoaded(true);\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n\n  function test(status) {\n    console.log(status);\n  }\n\n  function listArea() {\n    console.log(items);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: items.map(item => test(item.status))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  } //\n  // start of app return statement\n\n\n  if (error) {\n    {\n      {\n        console.log(error);\n      }\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Error: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 14\n      }, this);\n    }\n  } else if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(P, {\n        text: \"hi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), listArea()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(App, \"0ZdurhzlaZzbi+ejOBIIdFaAfBQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/rossgriffus/Documents/React-Practice/test12-26/12-26/src/App.js"],"names":["P","useEffect","useState","App","items","setItems","isLoaded","setIsLoaded","error","setError","fetch","then","res","json","result","data","test","status","console","log","listArea","map","item","message"],"mappings":";;;;;AAAA,OAAO,WAAP;AACA,SAASA,CAAT,QAAkB,KAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,IAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,KAAK,CAAC,sDAAD,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAGKG,MAAD,IAAY;AACV;AACAT,MAAAA,QAAQ,CAACS,MAAM,CAACC,IAAR,CAAR;AACAR,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD,KAPL,EAQI;AACA;AACA;AACCC,IAAAA,KAAD,IAAW;AACTD,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,KAdL;AAgBD,GAjBQ,EAiBN,EAjBM,CAAT;;AAmBA,WAASQ,IAAT,CAAcC,MAAd,EAAsB;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACD;;AAED,WAASG,QAAT,GAAoB;AAClBF,IAAAA,OAAO,CAACC,GAAR,CAAYf,KAAZ;AAEA,wBAAO;AAAA,gBAAMA,KAAK,CAACiB,GAAN,CAAWC,IAAD,IAAUN,IAAI,CAACM,IAAI,CAACL,MAAN,CAAxB;AAAN;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAhCY,CAkCb;AACA;;;AACA,MAAIT,KAAJ,EAAW;AACT;AACE;AACEU,QAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ;AACD;AACD,0BAAO;AAAA,8BAAaA,KAAK,CAACe,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;AACF,GAPD,MAOO,IAAI,CAACjB,QAAL,EAAe;AACpB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFM,MAEA;AACL,wBACE;AAAA,8BACE,QAAC,CAAD;AAAG,QAAA,IAAI,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,cADF,EAEGc,QAAQ,EAFX;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;AACF;;GArDQjB,G;;KAAAA,G;AAuDT,eAAeA,GAAf","sourcesContent":["import \"./App.css\";\nimport { P } from \"./P\";\nimport { useEffect, useState } from \"react\";\n\nfunction App() {\n  const [items, setItems] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    fetch(\"https://www.balldontlie.io/api/v1/games&per_page=100\")\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          // setIsLoaded(true);\n          setItems(result.data);\n          setIsLoaded(true);\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          setIsLoaded(true);\n          setError(error);\n        }\n      );\n  }, []);\n\n  function test(status) {\n    console.log(status);\n  }\n\n  function listArea() {\n    console.log(items);\n\n    return <div>{items.map((item) => test(item.status))}</div>;\n  }\n\n  //\n  // start of app return statement\n  if (error) {\n    {\n      {\n        console.log(error);\n      }\n      return <div>Error: {error.message}</div>;\n    }\n  } else if (!isLoaded) {\n    return <div>Loading...</div>;\n  } else {\n    return (\n      <div>\n        <P text=\"hi\" />\n        {listArea()}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}